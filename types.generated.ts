// Code generated by prismic-ts-codegen. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Blog Home documents */
interface BlogHomeDocumentData {
    /**
     * headline field in *Blog Home*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-home.headline
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    headline: prismicT.TitleField;
    /**
     * description field in *Blog Home*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-home.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * image field in *Blog Home*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-home.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<null>;
    /**
     * Another Field field in *Blog Home*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-home.anotherField
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    anotherField: prismicT.RichTextField;
    /**
     * Nav Items field in *Blog Home*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-home.navItems[]
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    navItems: prismicT.GroupField<Simplify<BlogHomeDocumentDataNavItemsItem>>;
}
/**
 * Item in Blog Home → Nav Items
 *
 */
interface BlogHomeDocumentDataNavItemsItem {
    /**
     * Name field in *Blog Home → Nav Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-home.navItems[].name
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    name: prismicT.KeyTextField;
}
/**
 * Blog Home document from Prismic
 *
 * - **API ID**: `blog-home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogHomeDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<BlogHomeDocumentData>, "blog-home", Lang>;
/** Content for Homepage documents */
interface HomepageDocumentData {
    /**
     * Title field in *Homepage*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Header Image field in *Homepage*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.headerImage
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    headerImage: prismicT.ImageField<null>;
    /**
     * NavigationItems field in *Homepage*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.navigationItems[]
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    navigationItems: prismicT.GroupField<Simplify<HomepageDocumentDataNavigationItemsItem>>;
}
/**
 * Item in Homepage → NavigationItems
 *
 */
interface HomepageDocumentDataNavigationItemsItem {
    /**
     * Name field in *Homepage → NavigationItems*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.navigationItems[].name
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    name: prismicT.RichTextField;
}
/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HomepageDocumentData>, "homepage", Lang>;
/** Content for Post documents */
interface PostDocumentData {
    /**
     * title field in *Post*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: post.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * date field in *Post*
     *
     * - **Field Type**: Date
     * - **Placeholder**: *None*
     * - **API ID Path**: post.date
     * - **Documentation**: https://prismic.io/docs/core-concepts/date
     *
     */
    date: prismicT.DateField;
    /**
     * Slice Zone (`slices`) field in *Post*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: post.slices[]
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PostDocumentDataSlicesSlice>;
}
/**
 * Slice for *Post → Slice Zone (`slices`)*
 *
 */
type PostDocumentDataSlicesSlice = ImageWithCaptionSlice | QuoteSlice | TextSlice | TestingSlice;
/**
 * Post document from Prismic
 *
 * - **API ID**: `post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PostDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PostDocumentData>, "post", Lang>;
/**
 * Primary content in ImageWithCaption → Primary
 *
 */
interface ImageWithCaptionSliceDefaultSlicePrimary {
    /**
     * image field in *ImageWithCaption → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image_with_caption.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<null>;
    /**
     * caption field in *ImageWithCaption → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: image_with_caption.primary.caption
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    caption: prismicT.RichTextField;
}
/**
 * Default slice variation for ImageWithCaption Slice
 *
 * - **API ID**: `default-slice`
 * - **Description**: `ImageWithCaption`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
type ImageWithCaptionSliceDefaultSlice = prismicT.SharedSliceVariation<"default-slice", Simplify<ImageWithCaptionSliceDefaultSlicePrimary>, never>;
/**
 * Primary content in ImageWithCaption → Primary
 *
 */
interface ImageWithCaptionSliceFullWidthImagePrimary {
    /**
     * image field in *ImageWithCaption → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image_with_caption.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<null>;
    /**
     * caption field in *ImageWithCaption → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: image_with_caption.primary.caption
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    caption: prismicT.RichTextField;
}
/**
 * Full Width Image variation for ImageWithCaption Slice
 *
 * - **API ID**: `fullWidthImage`
 * - **Description**: `ImageWithCaption`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
type ImageWithCaptionSliceFullWidthImage = prismicT.SharedSliceVariation<"fullWidthImage", Simplify<ImageWithCaptionSliceFullWidthImagePrimary>, never>;
/**
 * Slice variation for *ImageWithCaption*
 *
 */
type ImageWithCaptionSliceVariation = ImageWithCaptionSliceDefaultSlice | ImageWithCaptionSliceFullWidthImage;
/**
 * ImageWithCaption Shared Slice
 *
 * - **API ID**: `image_with_caption`
 * - **Description**: `ImageWithCaption`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageWithCaptionSlice = prismicT.SharedSlice<"image_with_caption", ImageWithCaptionSliceVariation>;
/**
 * Primary content in Quote → Primary
 *
 */
interface QuoteSliceDefaultSlicePrimary {
    /**
     * quote field in *Quote → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: quote.primary.quote
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    quote: prismicT.RichTextField;
}
/**
 * Default slice variation for Quote Slice
 *
 * - **API ID**: `default-slice`
 * - **Description**: `Quote`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
type QuoteSliceDefaultSlice = prismicT.SharedSliceVariation<"default-slice", Simplify<QuoteSliceDefaultSlicePrimary>, never>;
/**
 * Slice variation for *Quote*
 *
 */
type QuoteSliceVariation = QuoteSliceDefaultSlice;
/**
 * Quote Shared Slice
 *
 * - **API ID**: `quote`
 * - **Description**: `Quote`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuoteSlice = prismicT.SharedSlice<"quote", QuoteSliceVariation>;
/**
 * Primary content in Text → Primary
 *
 */
interface TextSliceDefaultSlicePrimary {
    /**
     * text field in *Text → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: text.primary.text
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    text: prismicT.RichTextField;
}
/**
 * Default slice variation for Text Slice
 *
 * - **API ID**: `default-slice`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
type TextSliceDefaultSlice = prismicT.SharedSliceVariation<"default-slice", Simplify<TextSliceDefaultSlicePrimary>, never>;
/**
 * Slice variation for *Text*
 *
 */
type TextSliceVariation = TextSliceDefaultSlice;
/**
 * Text Shared Slice
 *
 * - **API ID**: `text`
 * - **Description**: `Text`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TextSlice = prismicT.SharedSlice<"text", TextSliceVariation>;
/**
 * Primary content in Testing → Primary
 *
 */
interface TestingSliceDefaultSlicePrimary {
    /**
     * Title field in *Testing → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: testing.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *Testing → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: testing.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Item in Testing → Items
 *
 */
interface TestingSliceDefaultSliceItem {
    /**
     * image field in *Testing → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: testing.items[].image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<null>;
    /**
     * working field in *Testing → Items*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: testing.items[].working
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    working: prismicT.BooleanField;
}
/**
 * Default slice variation for Testing Slice
 *
 * - **API ID**: `default-slice`
 * - **Description**: `Testing`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
type TestingSliceDefaultSlice = prismicT.SharedSliceVariation<"default-slice", Simplify<TestingSliceDefaultSlicePrimary>, Simplify<TestingSliceDefaultSliceItem>>;
/**
 * Slice variation for *Testing*
 *
 */
type TestingSliceVariation = TestingSliceDefaultSlice;
/**
 * Testing Shared Slice
 *
 * - **API ID**: `testing`
 * - **Description**: `Testing`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestingSlice = prismicT.SharedSlice<"testing", TestingSliceVariation>;
